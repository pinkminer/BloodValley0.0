
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class StoryNode : Luban.BeanBase
{
    public StoryNode(JSONNode _buf) 
    {
        { if(!_buf["Id"].IsNumber) { throw new SerializationException(); }  Id = _buf["Id"]; }
        { if(!_buf["StoryLineId"].IsNumber) { throw new SerializationException(); }  StoryLineId = _buf["StoryLineId"]; }
        { if(!_buf["StoryLine"].IsString) { throw new SerializationException(); }  StoryLine = _buf["StoryLine"]; }
        { var __json0 = _buf["StoryPotions"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; StoryPotions = new int[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  StoryPotions[__index0++] = __v0; }   }
        { if(!_buf["IsEnd"].IsBoolean) { throw new SerializationException(); }  IsEnd = _buf["IsEnd"]; }
        { if(!_buf["EndingType"].IsNumber) { throw new SerializationException(); }  EndingType = _buf["EndingType"]; }
        { if(!_buf["IsEnterNextState"].IsBoolean) { throw new SerializationException(); }  IsEnterNextState = _buf["IsEnterNextState"]; }
        { if(!_buf["DialogueId"].IsNumber) { throw new SerializationException(); }  DialogueId = _buf["DialogueId"]; }
        { if(!_buf["IsChangeSprite"].IsBoolean) { throw new SerializationException(); }  IsChangeSprite = _buf["IsChangeSprite"]; }
        { if(!_buf["SpritePath"].IsString) { throw new SerializationException(); }  SpritePath = _buf["SpritePath"]; }
    }

    public static StoryNode DeserializeStoryNode(JSONNode _buf)
    {
        return new StoryNode(_buf);
    }

    /// <summary>
    /// 唯一id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 故事线id(当为-1表示进入故事的初始节点)
    /// </summary>
    public readonly int StoryLineId;
    /// <summary>
    /// 魔药对应的道具合成tag组合(即故事线)
    /// </summary>
    public readonly string StoryLine;
    public readonly int[] StoryPotions;
    /// <summary>
    /// 是否结束
    /// </summary>
    public readonly bool IsEnd;
    /// <summary>
    /// 结束游戏时的结局类型
    /// </summary>
    public readonly int EndingType;
    /// <summary>
    /// 是否进入下一阶段
    /// </summary>
    public readonly bool IsEnterNextState;
    /// <summary>
    /// 对应的剧情id(不展示剧情显示-1)
    /// </summary>
    public readonly int DialogueId;
    /// <summary>
    /// 是否修改立绘
    /// </summary>
    public readonly bool IsChangeSprite;
    /// <summary>
    /// 图片路径
    /// </summary>
    public readonly string SpritePath;
   
    public const int __ID__ = -580732809;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "StoryLineId:" + StoryLineId + ","
        + "StoryLine:" + StoryLine + ","
        + "StoryPotions:" + Luban.StringUtil.CollectionToString(StoryPotions) + ","
        + "IsEnd:" + IsEnd + ","
        + "EndingType:" + EndingType + ","
        + "IsEnterNextState:" + IsEnterNextState + ","
        + "DialogueId:" + DialogueId + ","
        + "IsChangeSprite:" + IsChangeSprite + ","
        + "SpritePath:" + SpritePath + ","
        + "}";
    }
}

}

